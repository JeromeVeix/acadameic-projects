import pandas as pd
import numpy as np
pd.options.display.max_columns=180
pd.set_option("Display.precision", 3)

dfsamp = pd.read_csv("C:/Users/jamir/Downloads/dfsamp.csv")
dfsamp

df = dfsamp.set_axis(["Unnamed",'ENTFLAG','REC_NUM','UPSSTCODE','MSA_CODE','FIPS_CNTY_CODE','CENSUS_TRACT_CODE',
'PERCENT_MINORITY_CENTRACT','MEDIAN_INCOME_CENTRACT','LOCAL_AREA_MEDIAN_INCOME','TRACT_LOCAL_MEDIAN_INC_RATIO',
'BORROWER_ANNUAL_INCOME','MSA_MEDIAN_INCOME','BORROWER_AREA_MEDIAN_FAM_INCOME','ACQ_UNPAID_PRINCIPAL_BAL','LOAN_PURPOSE',
'FED_GUARANTEE_TYPE','NUMBER_OF_BORROWERS','FIRST_TIME_HOME_BUYER','BORROWER_RACE_NATIONALORIG19',
'BORROWER_RACE_NATIONALORIG20','BORROWER_RACE_NATIONALORIG21','BORROWER_RACE_NATIONALORIG22','BORROWER_RACE_NATIONALORIG23',
'BORROWER_ETHNICITY','COBORROWER_RACE_NATIONALORIG25','COBORROWER_RACE_NATIONALORIG26','COBORROWER_RACE_NATIONALORIG27',
'COBORROWER_RACE_NATIONALORIG28','COBORROWER_RACE_NATIONALORIG29','COBORROWER_ETHNICITY','BORROWER_GENDER',
'COBORROWER_GENDER','BORROWER_AGE','COBORROWER_AGE','OCCUPANCY_CDE','RATE_SPREAD','HOEPA_STATUS','PROPERTY_TYPE',
'LIEN_STATUS','BORROWER_AGE_62OVER','COBORROWER_AGE_62OVER','ORIGINATION_LTV','MORTGAGE_NOTE_DATE','',
'MORTGAGE_TERM_ORIGINATION','INTEREST_RATE_ORIGINATION','NOTE_AMT','PREAPPROVAL_CDE','APPLICATION_CHANNEL',
'AUTOMATED_UNDERWRITING_SYS_CDE','BORROWER_CREDIT_SCORE_MODEL','COBORROWER_CREDIT_SCORE_MODEL','DEBT_TO_INCOME_RATIO',
'DISCOUNT_POINTS','INTRO_RATE_PERIOD','MANUFACTURED_HOME_LAND_PROP_INTEREST','PROPERTY_VALUE_AMT','RURAL_CENSUS_TRACT',
'LOWER_MISSISSIPPI_DELTA_CNTY','MIDDLE_APPALACHIA_CNTY','PERSISTENT_POVERTY_CNTY','AREA_OF_CONCENTRATED_POVERTY',
'HIGH_OPPORTUNITY_AREA','QOZ_CENSUS_TRACT',], axis = 1, inplace = False)

df1 = pd.read_fwf("C:/Users/jamir/Downloads/MSA_2020.txt", header = None)
df1

df1a=df1.drop(columns=1).rename(columns={0:"MSA_CODE", 2:"MSANAME"})
df1a.info()
df1a.head(50) #Column names shouldn't be in quotation marks

df1a["MSANAME"] = df1a.MSANAME.str.replace("'"," ")
df1a

df1a["MSApos"] = df1a.MSANAME.str.find("MSA")
df1b = df1a.copy()
#position helps distinguish between locations
#Also check for similarities between locations of MSA_CODEs/MSANAMEs
#MSANAME1 deletes the MSA from the MSANAME, which makes it easier to identify similarities between cities/states
df1b["MSANAME1"] = df1a.MSANAME.str.replace("MSA", " ")
df1b

#Create new column based on existing column condition
df1b["MSA"] = np.where(df1b.MSApos == -1, 0, 1)
df1b
#If pos == 1, then MSA = 0
#else MSA = 1
#Export the file to csv then drop whatever is not needed. 
#Cant run data specifics on the txt files without cleaning it

#Locate based on the first condition in the df sample that reprsent FIPS_CNTY_CODE = 1
checkdata=df.loc[(df['FIPS_CNTY_CODE']==1) & (df['UPSSTCODE'] ==1)]
checkdata

df2 = pd.read_fwf("C:/Users/jamir/Downloads/STCNTY_2020.txt", header = None)
df2a = df2.rename(columns = {0:"UPSSTCODE", 1:"STATE", 2:"FIPS_CNTY_CODE", 3:"FIPS_CNTY_NAME"})
df2a.loc[df2a.UPSSTCODE==1] #state order is in alphebetical order 
#FIPS_CNTY_CODE represents the fixed 

m1 = df.merge(df1b, how="left", on="MSA_CODE")
m1.head()

m2 = m1.merge(df2a, how="left", on=["UPSSTCODE", "FIPS_CNTY_CODE"])
m2.head()

checkdata2 = m2.loc[(m2["FIPS_CNTY_CODE"]==1) & (m2["UPSSTCODE"]==1)]

checkdata = df.loc[(df["FIPS_CNTY_CODE"]==1) & (df["UPSSTCODE"]==1)]
checkdata.iloc[:,0:6].head()

df3 = pd.read_fwf("C:/Users/jamir/Downloads/fhlmc_sf2020c_loans.txt", header = None)
df3.head(10)

df3a = df3.rename(columns = {0:'ENTFLAG',1:'REC_NUM',2:'UPSSTCODE',3:'MSA_CODE',4:'FIPS_CNTY_CODE',5:'CENSUS_TRACT_CODE',
6:'PERCENT_MINORITY_CENTRACT',7:'MEDIAN_INCOME_CENTRACT',8:'LOCAL_AREA_MEDIAN_INCOME',9:'TRACT_LOCAL_MEDIAN_INC_RATIO',
10:'BORROWER_ANNUAL_INCOME',11:'MSA_MEDIAN_INCOME',12:'BORROWER_AREA_MEDIAN_FAM_INCOME',13:'ACQ_UNPAID_PRINCIPAL_BAL',
14:'LOAN_PURPOSE',15:'FED_GUARANTEE_TYPE',16:'NUMBER_OF_BORROWERS',17:'FIRST_TIME_HOME_BUYER',
18:'BORROWER_RACE_NATIONALORIG19',19:'BORROWER_RACE_NATIONALORIG20',20:'BORROWER_RACE_NATIONALORIG21',
21:'BORROWER_RACE_NATIONALORIG22',22:'BORROWER_RACE_NATIONALORIG23',23:'BORROWER_ETHNICITY',
24:'COBORROWER_RACE_NATIONALORIG25',25:'COBORROWER_RACE_NATIONALORIG26',26:'COBORROWER_RACE_NATIONALORIG27',
27:'COBORROWER_RACE_NATIONALORIG28',28:'COBORROWER_RACE_NATIONALORIG29',29:'COBORROWER_ETHNICITY',30:'BORROWER_GENDER',
31:'COBORROWER_GENDER',32:'BORROWER_AGE',33:'COBORROWER_AGE',34:'OCCUPANCY_CDE',35:'RATE_SPREAD',36:'HOEPA_STATUS',
37:'PROPERTY_TYPE',38:'LIEN_STATUS',39:'BORROWER_AGE_62OVER',40:'COBORROWER_AGE_62OVER',41:'ORIGINATION_LTV',
42:'MORTGAGE_NOTE_DATE',43:'',44:'MORTGAGE_TERM_ORIGINATION',45:'INTEREST_RATE_ORIGINATION',46:'NOTE_AMT',
47:'PREAPPROVAL_CDE',48:'APPLICATION_CHANNEL',49:'AUTOMATED_UNDERWRITING_SYS_CDE',50:'BORROWER_CREDIT_SCORE_MODEL',
51:'COBORROWER_CREDIT_SCORE_MODEL',52:'DEBT_TO_INCOME_RATIO',53:'DISCOUNT_POINTS',54:'INTRO_RATE_PERIOD',
55:'MANUFACTURED_HOME_LAND_PROP_INTEREST',56:'PROPERTY_VALUE_AMT',57:'RURAL_CENSUS_TRACT',58:'LOWER_MISSISSIPPI_DELTA_CNTY',
59:'MIDDLE_APPALACHIA_CNTY',60:'PERSISTENT_POVERTY_CNTY',61:'AREA_OF_CONCENTRATED_POVERTY',62:'HIGH_OPPORTUNITY_AREA',
63:'QOZ_CENSUS_TRACT'})
df3a

m3 = m2.merge(df3a, how = "left", on=['ENTFLAG','REC_NUM','UPSSTCODE','MSA_CODE','FIPS_CNTY_CODE','CENSUS_TRACT_CODE',
'PERCENT_MINORITY_CENTRACT','MEDIAN_INCOME_CENTRACT','LOCAL_AREA_MEDIAN_INCOME','TRACT_LOCAL_MEDIAN_INC_RATIO',
'BORROWER_ANNUAL_INCOME','MSA_MEDIAN_INCOME','BORROWER_AREA_MEDIAN_FAM_INCOME','ACQ_UNPAID_PRINCIPAL_BAL','LOAN_PURPOSE',
'FED_GUARANTEE_TYPE','NUMBER_OF_BORROWERS','FIRST_TIME_HOME_BUYER','BORROWER_RACE_NATIONALORIG19',
'BORROWER_RACE_NATIONALORIG20','BORROWER_RACE_NATIONALORIG21','BORROWER_RACE_NATIONALORIG22','BORROWER_RACE_NATIONALORIG23',
'BORROWER_ETHNICITY','COBORROWER_RACE_NATIONALORIG25','COBORROWER_RACE_NATIONALORIG26','COBORROWER_RACE_NATIONALORIG27',
'COBORROWER_RACE_NATIONALORIG28','COBORROWER_RACE_NATIONALORIG29','COBORROWER_ETHNICITY','BORROWER_GENDER',
'COBORROWER_GENDER','BORROWER_AGE','COBORROWER_AGE','OCCUPANCY_CDE','RATE_SPREAD','HOEPA_STATUS','PROPERTY_TYPE',
'LIEN_STATUS','BORROWER_AGE_62OVER','COBORROWER_AGE_62OVER','ORIGINATION_LTV','MORTGAGE_NOTE_DATE','',
'MORTGAGE_TERM_ORIGINATION','INTEREST_RATE_ORIGINATION','NOTE_AMT','PREAPPROVAL_CDE','APPLICATION_CHANNEL',
'AUTOMATED_UNDERWRITING_SYS_CDE','BORROWER_CREDIT_SCORE_MODEL','COBORROWER_CREDIT_SCORE_MODEL','DEBT_TO_INCOME_RATIO',
'DISCOUNT_POINTS','INTRO_RATE_PERIOD','MANUFACTURED_HOME_LAND_PROP_INTEREST','PROPERTY_VALUE_AMT','RURAL_CENSUS_TRACT',
'LOWER_MISSISSIPPI_DELTA_CNTY','MIDDLE_APPALACHIA_CNTY','PERSISTENT_POVERTY_CNTY','AREA_OF_CONCENTRATED_POVERTY',
'HIGH_OPPORTUNITY_AREA','QOZ_CENSUS_TRACT',])
m3

M = df.shape[0] 
m3.groupby('BORROWER_GENDER').Unnamed.count()

Male = 235160 / M
print(Male)
Female = 111086 / M
print(Female)
Notprovided = 31582 / M
print(Notprovided)
Nonapplicable = 169 / M
print(Nonapplicable)

m3.groupby('BORROWER_AGE').Unnamed.count()

undertwentyfive = 5797 / M
print(undertwentyfive)
twentyfivetothirtyfour = 77263 / M
print(twentyfivetothirtyfour)
thirtyfivetofourtyfour = 108500 / M
print(thirtyfivetofourtyfour)
fourtyfivetofiftyfour = 86105 / M
print(fourtyfivetofiftyfour)
fiftyfivetosixtyfour = 60712 / M
print(fiftyfivetosixtyfour)
sixtyfivetoseventyfour = 31248 / M
print(sixtyfivetoseventyfour)
overseventyfour = 8361 / M
print(overseventyfour)
notprovided = 11 / M
print(notprovided)

m3.groupby('PROPERTY_TYPE').agg({'PROPERTY_TYPE':'count'})/M

m3.groupby('COBORROWER_CREDIT_SCORE_MODEL').agg({'COBORROWER_CREDIT_SCORE_MODEL':'count'})/M

pd.options.display.float_format = "{:,.7f}".format
m3.groupby('FIRST_TIME_HOME_BUYER').agg({'FIRST_TIME_HOME_BUYER':'count'})/M

